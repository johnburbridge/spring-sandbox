version: '3'
networks:
  metabuild:
    driver: overlay

services:
  redis:
    image: redis:alpine
    hostname: redis
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      metabuild:
        aliases:
          - redis.metabuild.org

  database:
    image: mysql
    hostname: database
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    networks:
      metabuild:
        aliases:
          - database.metabuild.org

  auth:
    image: gcr.io/spring-sandbox-219017/sandbox-auth
    hostname: auth
    depends_on:
      - database
    ports:
      - 8080:8080
    environment:
      SANDBOX_DATABASE_HOST: database.metabuild.org
      SANDBOX_DATABSE_PORT: 3306
    networks:
      metabuild:
        aliases:
          - auth.metabuild.org

  api:
    image: gcr.io/spring-sandbox-219017/sandbox-api
    hostname: api
    depends_on:
      - auth
      - database
    ports:
      - 8081:8081
    environment:
      SANDBOX_DATABASE_HOST: database.metabuild.org
      SANDBOX_DATABSE_PORT: 3306
    networks:
      metabuild:
        aliases:
          - api.metabuild.org

  frontend:
    image: gcr.io/spring-sandbox-219017/sandbox-frontend
    hostname: frontend
    ports:
      - 8082:8082
    depends_on:
      - auth
      - api
      - redis
    environment:
      SANDBOX_API_HOST: api.metabuild.org
      SANDBOX_API_PORT: 8081
      SPRING_REDIS_HOST: redis.metabuild.org
      SPRING_REDIS_PORT: 6379
      SERVICE_PORTS: 8081
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    networks:
      metabuild:
        aliases:
          - frontend.metabuild.org
    extra_hosts:
      - "dev.metabuild.org:127.0.0.1"

  proxy:
    image: dockercloud/haproxy
    depends_on:
      - frontend
    environment:
      - BALANCE=leastconn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
    networks:
      metabuild:
        aliases:
          - proxy.metabuild.org
    deploy:
      placement:
        constraints: [node.role == manager]
