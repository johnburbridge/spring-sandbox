buildscript {
    ext {
        kotlinVersion = '1.3.20'
        springBootVersion = '2.1.2.RELEASE'
        dockerVersion = '0.21.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${dockerVersion}")
    }
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'
    
    group = "org.burbridge.${rootProject.name}.${project.name}"
    version = '0.0.6-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext {
        springBootVersion = '2.0.7.RELEASE'
        springCloudVersion = 'Finchley.RELEASE'
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
//        maven {
//            url "https://repo.spring.io/milestone"
//        }
    }

    dependencies {
        compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
        compile('org.jetbrains.kotlin:kotlin-reflect')
        compile('io.github.microutils:kotlin-logging:1.6.22')
        compile('com.fasterxml.jackson.module:jackson-module-kotlin')

        testCompile('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit'
        }
        testImplementation('org.junit.jupiter:junit-jupiter-api')
        testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }

    test {
        useJUnitPlatform {
            exclude '**/*IntegrationTest.class'
        }
    }

    task integrationTest(type: Test) {
        useJUnitPlatform {
            include '**/*IntegrationTest.class'
        }
    }

    task jacocoMergeTest(type: JacocoMerge) {
        destinationFile = file("$buildDir/jacoco/combinedTestCoverage.exec")
        executionData = project.fileTree(dir: '.', include:'**/build/jacoco/*.exec')
    }

    jacocoTestReport {
        dependsOn(jacocoMergeTest)
        executionData = files(jacocoMergeTest.destinationFile)

        reports {
            xml.enabled = true
            csv.enabled = false
            html.destination file("${buildDir}/reports/tests/jacoco")
        }

        afterEvaluate {
            classDirectories = files(project.fileTree(dir: "$buildDir/classes/kotlin/main", exclude: [
                    '**/dtos/**',
                    '**/config/**'
            ]))
        }
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/kotlin/main")
        }
    }
}
